{"version":3,"sources":["webpack://bigCounterX/webpack/universalModuleDefinition","webpack://bigCounterX/webpack/bootstrap","webpack://bigCounterX/./node_modules/is-primitive/index.js","webpack://bigCounterX/./node_modules/is-symbol/index.js","webpack://bigCounterX/./node_modules/is-string/index.js","webpack://bigCounterX/./node_modules/is-arguments/index.js","webpack://bigCounterX/./node_modules/object-keys/isArguments.js","webpack://bigCounterX/./node_modules/is-date-object/index.js","webpack://bigCounterX/./node_modules/object-keys/index.js","webpack://bigCounterX/./node_modules/has-symbols/index.js","webpack://bigCounterX/(webpack)/buildin/global.js","webpack://bigCounterX/./node_modules/has-symbols/shams.js","webpack://bigCounterX/./node_modules/object-keys/implementation.js","webpack://bigCounterX/../src/attempt-x.js","webpack://bigCounterX/../src/is-nil-x.js","webpack://bigCounterX/../src/require-object-coercible-x.js","webpack://bigCounterX/../src/to-object-x.js","webpack://bigCounterX/../src/to-boolean-x.js","webpack://bigCounterX/../src/to-string-tag-x.js","webpack://bigCounterX/../src/white-space-x.js","webpack://bigCounterX/../src/has-symbol-support-x.js","webpack://bigCounterX/../src/has-to-string-tag-x.js","webpack://bigCounterX/../src/to-string-x.js","webpack://bigCounterX/../src/require-coercible-to-string-x.js","webpack://bigCounterX/../src/trim-left-x.js","webpack://bigCounterX/../src/trim-right-x.js","webpack://bigCounterX/../src/trim-x.js","webpack://bigCounterX/../src/normalize-space-x.js","webpack://bigCounterX/../src/replace-comments-x.js","webpack://bigCounterX/../src/is-function-x.js","webpack://bigCounterX/../src/to-string-symbols-supported-x.js","webpack://bigCounterX/../src/assert-is-function-x.js","webpack://bigCounterX/../src/to-primitive-x.js","webpack://bigCounterX/../src/parse-int-x.js","webpack://bigCounterX/../src/nan-x.js","webpack://bigCounterX/../src/to-number-x.js","webpack://bigCounterX/../src/is-nan-x.js","webpack://bigCounterX/../src/is-finite-x.js","webpack://bigCounterX/../src/infinity-x.js","webpack://bigCounterX/../src/math-sign-x.js","webpack://bigCounterX/../src/to-integer-x.js","webpack://bigCounterX/../src/to-length-x.js","webpack://bigCounterX/../src/has-boxed-string-x.js","webpack://bigCounterX/../src/split-if-boxed-bug-x.js","webpack://bigCounterX/../src/array-any-x.js","webpack://bigCounterX/../src/array-all-x.js","webpack://bigCounterX/../src/array-for-each-x.js","webpack://bigCounterX/../src/to-property-key-x.js","webpack://bigCounterX/../src/object-define-property-x.js","webpack://bigCounterX/../src/has-own-property-x.js","webpack://bigCounterX/../src/assert-is-object-x.js","webpack://bigCounterX/../src/object-get-own-property-descriptor-x.js","webpack://bigCounterX/../src/is-array-x.js","webpack://bigCounterX/../src/array-like-slice-x.js","webpack://bigCounterX/../src/is-object-like-x.js","webpack://bigCounterX/../src/math-clamp-x.js","webpack://bigCounterX/../src/is-index-x.js","webpack://bigCounterX/../src/property-is-enumerable-x.js","webpack://bigCounterX/../src/object-keys-x.js","webpack://bigCounterX/../src/is-regexp-x.js","webpack://bigCounterX/../src/array-filter-x.js","webpack://bigCounterX/../src/get-own-property-symbols-x.js","webpack://bigCounterX/../src/get-own-enumerable-property-symbols-x.js","webpack://bigCounterX/../src/array-slice-x.js","webpack://bigCounterX/../src/get-own-enumerable-keys-x.js","webpack://bigCounterX/../src/object-define-properties-x.js","webpack://bigCounterX/../src/array-reduce-right-x.js","webpack://bigCounterX/../src/big-counter-x.js"],"names":["root","factory","exports","module","define","amd","magic","Object","defineProperty","prototype","get","this","configurable","__magic__","self","window","error","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","enumerable","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","val","toStr","toString","symToStr","symStringRegex","valueOf","test","isSymbolObject","e","strValue","String","hasToStringTag","tryStringObject","isStandardArguments","isLegacyArguments","length","callee","supportsStandardArguments","arguments","str","isArgs","getDay","Date","tryDateObject","slice","Array","origKeys","keys","keysShim","originalKeys","shim","args","global","origSymbol","hasSymbolSham","g","Function","getOwnPropertySymbols","iterator","obj","sym","symObj","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","has","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","constructor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","k","isObject","isFunction","isArguments","isString","theKeys","TypeError","skipProto","push","j","skipConstructor","equalsConstructorPrototypeIfNotBuggy","attempt_x_esm","fn","_len","_key","threw","apply","is_nil_x_esm","require_object_coercible_x_esm","concat","castObject","to_object_x_esm","to_boolean_x_esm","nativeObjectToString","to_string_tag_x_esm","hasSymbolSupport","_newArrowCheck","is_symbol_default","undefined","has_symbol_support_x_esm","has_to_string_tag_x_esm","ERROR_MESSAGE","castString","to_string_x_esm","require_coercible_to_string_x_esm","list","code","description","es5","es2015","es2016","es2017","es2018","string","stringES2018","white_space_x_esm_length","white_space_x_esm_i","white_space_x_esm","reLeft","RegExpCtr","replace","trim_left_x_esm","reRight2018","trim_right_x_esm_RegExpCtr","trim_right_x_esm_replace","trim_right_x_esm","trim_x_esm","reNormalize2018","normalize_space_x_esm_RegExpCtr","normalize_space_x_esm_replace","normalize_space_x_esm","STRIP_COMMENTS","replace_comments_x_esm_replace","replace_comments_x_esm","replacement","FunctionCtr","fToString","ctrRx","hasNativeClass","is_function_x_esm_testClassString","isES6ClassFn","result","is_function_x_esm","allowClass","is_primitive_default","tryFuncToString","strTag","is_function_x_esm_compareTags","pToString","isSymbolFn","a","to_string_symbols_supported_x_esm_castString","to_string_symbols_supported_x_esm","assert_is_function_x_esm","callback","msg","StringCtr","NumberCtr","symToPrimitive","toPrimitive","symValueOf","toStringOrder","toNumberOrder","to_primitive_x_esm_ordinaryToPrimitive","ordinary","hint","assertHint","method","methodNames","getHint","supplied","to_primitive_x_esm_getExoticToPrim","func","to_primitive_x_esm_getMethod","to_primitive_x_esm_evalExotic","exoticToPrim","input","to_primitive_x_esm_evalPrimitive","newHint","is_date_object_default","to_primitive_x_esm","preferredType","nativeParseInt","parseInt","castNumber","charAt","hexRegex","parse_int_x_esm_test","parse_int_x_esm","radix","to_number_x_esm_castNumber","pStrSlice","binaryRegex","to_number_x_esm_test","octalRegex","nonWSregex","RegExpConstructor","invalidHexLiteral","to_number_x_esm_parseBase","parseString","toNum","isBinary","isOctal","to_number_x_esm_convertString","hasNonWS","isInvalidHexLiteral","trimmed","to_number_x_esm","toNumber","argument","to_number_x_esm_assertNotSymbol","is_nan_x_esm","is_finite_x_esm","number","math_sign_x_esm","x","abs","Math","floor","to_integer_x_esm","to_length_x_esm","len","boxedString","has_boxed_string_x_esm","strSplit","split","isStringFn","is_string_default","split_if_boxed_bug_x_esm","performCallback","_args","_slicedToArray","noThis","thisArg","callBack","iterable","index","item","array_any_x_esm_getIterableLengthPair","array_any_x_esm","array","_getIterableLengthPai","_getIterableLengthPai2","array_all_x_esm","iteratee","spy","res","nfe","forEach","nativeForEach","array_for_each_x_esm","_this","array_for_each_x_esm_newArrowCheck","array_for_each_x_esm_test1","_this2","array_for_each_x_esm_test2","0","1","3","4","array_for_each_x_esm_test4","doc","document","fragment","createDocumentFragment","div","createElement","appendChild","childNodes","array_for_each_x_esm_test5","array_for_each_x_esm_test6","array_for_each_x_esm_test7","definePropertyFallback","$defineProperty","to_property_key_x_esm","_typeof","hop","has_own_property_x_esm","assert_is_object_x_esm","ObjectCtr","nd","nativeDefProp","object_define_property_x_esm_toPropertyDescriptor","desc","writable","setter","set","object_define_property_x_esm_testWorksWith","testResult","object_define_property_x_esm_doc","prototypeOfObject","supportsAccessors","defineGetter","__defineGetter_","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","propKey","propDesc","__proto__","getOPDFallback1","getOPDFallback2","$getOwnPropertyDescriptor","object_define_property_x_esm","nia","isArray","nativeIsArray","is_array_x_esm_testResult","is_array_x_esm","getMax","b","setRelative","array_like_slice_x_esm","arrayLike","start","end","relativeEnd","finalEnd","next","is_object_like_x_esm","math_clamp_x_esm_getMaxMin","minVal","max","min","RangeError","math_clamp_x_esm","_getMaxMin","reIsUint","rxTest","is_index_x_esm","propIsEnumerable","property_is_enumerable_x_esm","object_get_own_property_descriptor_x_esm_charAt","object_get_own_property_descriptor_x_esm_ObjectCtr","ngopd","nativeGOPD","object_get_own_property_descriptor_x_esm_doesGOPDWork","prop","object_get_own_property_descriptor_x_esm_doc","object_get_own_property_descriptor_x_esm_res","worksWithPrim","object_get_own_property_descriptor_x_esm_lookupGetter","object_get_own_property_descriptor_x_esm_lookupSetter","object_get_own_property_descriptor_x_esm_prototypeOfObject","object_get_own_property_descriptor_x_esm_supportsAccessors","lg","ls","isStringIndex","notPrototypeOfObject","object_keys_x_esm_isWorking","throwsWithNull","object_keys_x_esm_worksWithPrim","worksWithRegex","worksWithArgs","object_keys_x_esm_worksWithStr","object_get_own_property_descriptor_x_esm","regexExec","exec","is_regexp_x_esm","lastIndex","tryRegexExecCall","object_keys_x_esm_ObjectCtr","nativeKeys","isCorrectRes","either","y","testObj","object_keys_x_esm_res","object_keys_x_esm","is_arguments_default","regexKeys","object_keys_default","get_own_property_symbols_x_esm_isWorking","nf","filter","nativeFilter","array_filter_x_esm","array_filter_x_esm_test1","array_filter_x_esm_test2","array_filter_x_esm_test3","array_filter_x_esm_test4","array_filter_x_esm_slicedToArray","getTest5Result","array_filter_x_esm_test5","array_filter_x_esm_test6","array_filter_x_esm_test7","predicate","nativeGOPS","get_own_property_symbols_x_esm_symbol","get_own_property_symbols_x_esm_testObj","get_own_property_symbols_x_esm_r","get_own_property_symbols_x_esm","resultDocElement","get_own_enumerable_property_symbols_x_esm","target","symbol","get_own_enumerable_property_symbols_x_esm_newArrowCheck","get_own_enumerable_keys_x_esm","object_define_properties_x_esm","properties","props","nativeSlice","failArray","array_slice_x_esm_testArray","failString","array_slice_x_esm_testString","failDOM","documentElement","array_slice_x_esm","rr","reduceRight","nativeReduceR","array_reduce_right_x_esm","acc","array_reduce_right_x_esm_test2","arg","array_reduce_right_x_esm_test3","array_reduce_right_x_esm_test4","node","array_reduce_right_x_esm_test5","array_reduce_right_x_esm_typeof","array_reduce_right_x_esm_test6","argsLength","reducer","digit","counterToString","count","big_counter_x_esm_BigCounter","BigCounter","clone","howMany","carry","zi","reset","toJSON","__webpack_exports__"],"mappings":"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","file":"big-counter-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bigCounterX\"] = factory();\n\telse\n\t\troot[\"bigCounterX\"] = factory();\n})((function () {\n  'use strict';\n\n  /* eslint-disable-next-line no-var */\n  var magic;\n\n  try {\n    /* eslint-disable-next-line no-extend-native */\n    Object.defineProperty(Object.prototype, '__magic__', {\n      /* eslint-disable-next-line object-shorthand */\n      get: function() {\n        return this;\n      },\n      /* eslint-disable-next-line prettier/prettier */\n      configurable: true\n    });\n\n    if (typeof __magic__ === 'undefined') {\n      magic = typeof self === 'undefined' ? window : self;\n    } else {\n      /* eslint-disable-next-line no-undef */\n      magic = __magic__;\n    }\n\n    /* eslint-disable-next-line no-underscore-dangle,no-use-extend-native/no-use-extend-native */\n    delete Object.prototype.__magic__;\n\n    return magic;\n  } catch (error) {\n    return window;\n  }\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isPrimitive(val) {\n  if (typeof val === 'object') {\n    return val === null;\n  }\n  return typeof val !== 'function';\n};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","'use strict';\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar toStr = Object.prototype.toString;\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn toStr.call(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\ttoStr.call(value) !== '[object Array]' &&\n\t\ttoStr.call(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) { return false; }\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @param {Function} [fn] - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\nconst attempt = function attempt(fn, ...args) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this */\n      value: fn.apply(this, args),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n};\n\nexport default attempt;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n */\nconst isNil = function isNil(value) {\n  /* eslint-disable-next-line lodash/prefer-is-nil */\n  return value === null || typeof value === 'undefined';\n};\n\nexport default isNil;\n","import isNil from 'is-nil-x';\n\n/**\n * The abstract operation RequireObjectCoercible throws an error if argument\n * is a value that cannot be converted to an Object using ToObject.\n *\n * @param {*} [value] - The `value` to check.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {string} The `value`.\n */\nconst requireObjectCoercible = function requireObjectCoercible(value) {\n  if (isNil(value)) {\n    throw new TypeError(`Cannot call method on ${value}`);\n  }\n\n  return value;\n};\n\nexport default requireObjectCoercible;\n","import requireObjectCoercible from 'require-object-coercible-x';\n\nconst castObject = {}.constructor;\n\n/**\n * The abstract operation ToObject converts argument to a value of\n * type Object.\n *\n * @param {*} value - The `value` to convert.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {!object} The `value` converted to an object.\n */\nconst toObject = function toObject(value) {\n  return castObject(requireObjectCoercible(value));\n};\n\nexport default toObject;\n","/**\n * The abstract operation ToBoolean converts argument to a value of type Boolean.\n *\n * @param {*} [value] - The value to be converted.\n * @returns {boolean} 'true' if value is truthy; otherwise 'false'.\n */\nconst toBoolean = function toBoolean(value) {\n  return !!value;\n};\n\nexport default toBoolean;\n","const nativeObjectToString = {}.toString;\n\n/**\n * The `toStringTag` method returns \"[object type]\", where type is the\n * object type.\n *\n * @param {*} [value] - The object of which to get the object type string.\n * @returns {string} The object type string.\n */\nconst toStringTag = function toStringTag(value) {\n  if (value === null) {\n    return '[object Null]';\n  }\n\n  if (typeof value === 'undefined') {\n    return '[object Undefined]';\n  }\n\n  return nativeObjectToString.call(value);\n};\n\nexport default toStringTag;\n","/**\n * A record of a white space character.\n *\n * @typedef {object} CharRecord\n * @property {number} code - The character code.\n * @property {string} description - A description of the character.\n * @property {boolean} es5 - Whether the spec lists this as a white space.\n * @property {boolean} es2015 - Whether the spec lists this as a white space.\n * @property {boolean} es2016 - Whether the spec lists this as a white space.\n * @property {boolean} es2017 - Whether the spec lists this as a white space.\n * @property {boolean} es2018 - Whether the spec lists this as a white space.\n * @property {string} string - The character string.\n */\n\n/**\n * An array of the whitespace char codes, string, descriptions and language\n * presence in the specifications.\n *\n * @type Array.<CharRecord>\n */\nexport const list = [\n  {\n    code: 0x0009,\n    description: 'Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0009',\n  },\n  {\n    code: 0x000a,\n    description: 'Line Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000a',\n  },\n  {\n    code: 0x000b,\n    description: 'Vertical Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000b',\n  },\n  {\n    code: 0x000c,\n    description: 'Form Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000c',\n  },\n  {\n    code: 0x000d,\n    description: 'Carriage Return',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000d',\n  },\n  {\n    code: 0x0020,\n    description: 'Space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0020',\n  },\n  /*\n  {\n    code: 0x0085,\n    description: 'Next line',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u0085'\n  }\n  */\n  {\n    code: 0x00a0,\n    description: 'No-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u00a0',\n  },\n  {\n    code: 0x1680,\n    description: 'Ogham space mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u1680',\n  },\n  {\n    code: 0x180e,\n    description: 'Mongolian vowel separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: false,\n    es2018: false,\n    string: '\\u180e',\n  },\n  {\n    code: 0x2000,\n    description: 'En quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2000',\n  },\n  {\n    code: 0x2001,\n    description: 'Em quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2001',\n  },\n  {\n    code: 0x2002,\n    description: 'En space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2002',\n  },\n  {\n    code: 0x2003,\n    description: 'Em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2003',\n  },\n  {\n    code: 0x2004,\n    description: 'Three-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2004',\n  },\n  {\n    code: 0x2005,\n    description: 'Four-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2005',\n  },\n  {\n    code: 0x2006,\n    description: 'Six-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2006',\n  },\n  {\n    code: 0x2007,\n    description: 'Figure space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2007',\n  },\n  {\n    code: 0x2008,\n    description: 'Punctuation space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2008',\n  },\n  {\n    code: 0x2009,\n    description: 'Thin space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2009',\n  },\n  {\n    code: 0x200a,\n    description: 'Hair space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u200a',\n  },\n  /*\n  {\n    code: 0x200b,\n    description: 'Zero width space',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u200b'\n  },\n  */\n  {\n    code: 0x2028,\n    description: 'Line separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2028',\n  },\n  {\n    code: 0x2029,\n    description: 'Paragraph separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2029',\n  },\n  {\n    code: 0x202f,\n    description: 'Narrow no-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u202f',\n  },\n  {\n    code: 0x205f,\n    description: 'Medium mathematical space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u205f',\n  },\n  {\n    code: 0x3000,\n    description: 'Ideographic space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u3000',\n  },\n  {\n    code: 0xfeff,\n    description: 'Byte Order Mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\ufeff',\n  },\n];\n\n/**\n * A string of the ES5 to ES2016 whitespace characters.\n *\n * @type string\n */\nlet stringES2016 = '';\n\n/**\n * A string of the ES2017 to ES2018 whitespace characters.\n *\n * @type string\n */\nlet stringES2018 = '';\nconst {length} = list;\nfor (let i = 0; i < length; i += 1) {\n  if (list[i].es2016) {\n    stringES2016 += list[i].string;\n  }\n\n  if (list[i].es2018) {\n    stringES2018 += list[i].string;\n  }\n}\n\nconst string2018 = stringES2018;\n\nexport default string2018;\nexport const string2016 = stringES2016;\n","import attempt from 'attempt-x';\nimport isSymbol from 'is-symbol';\n\nconst hasSymbolSupport = attempt(() => {\n  /* eslint-disable-next-line compat/compat */\n  return typeof Symbol === 'function' && isSymbol(Symbol(''));\n});\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbolSupport.threw === false && hasSymbolSupport.value === true;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/**\n * Indicates if `Symbol.toStringTag`exists and is the correct type.\n * `true`, if it exists and is the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbols &&\n  /* eslint-disable-next-line compat/compat */\n  isSymbol(Symbol.toStringTag);\n","import isSymbol from 'is-symbol';\n\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a string';\nconst castString = ERROR_MESSAGE.constructor;\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} [value] - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n */\nconst ToString = function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return castString(value);\n};\n\nexport default ToString;\n","import requireObjectCoercible from 'require-object-coercible-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method requires an argument is corecible then converts using ToString.\n *\n * @param {*} [value] - The value to converted to a string.\n * @throws {TypeError} If value is null or undefined.\n * @returns {string} The value as a string.\n */\nconst requireCoercibleToString = function requireCoercibleToString(value) {\n  return toStr(requireObjectCoercible(value));\n};\n\nexport default requireCoercibleToString;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reLeft = new RegExpCtr(`^[${whiteSpace}]+`);\nconst {replace} = EMPTY_STRING;\n/**\n * This method removes whitespace from the start of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nconst trimStart = function trimStart(string) {\n  return replace.call(requireCoercibleToString(string), reLeft, EMPTY_STRING);\n};\n\nexport default trimStart;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace from 'white-space-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reRight2018 = new RegExpCtr(`[${whiteSpace}]+$`);\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method removes whitespace from the end of a string. (ES2019).\n *\n * @param {string} [string] - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nconst trimEnd = function trimEnd(string) {\n  return replace.call(requireCoercibleToString(string), reRight2018, EMPTY_STRING);\n};\n\nexport default trimEnd;\n","import trimStart from 'trim-left-x';\nimport trimEnd from 'trim-right-x';\n\n/**\n * This method removes whitespace from the start and end of a string.\n * (ES2019).\n *\n * @param {string} [string] - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nconst trim = function trim(string) {\n  return trimStart(trimEnd(string));\n};\n\nexport default trim;\n","import trim from 'trim-x';\nimport whiteSpace from 'white-space-x';\n\nconst SPACE = ' ';\nconst RegExpCtr = /none/.constructor;\nconst reNormalize2018 = new RegExpCtr(`[${whiteSpace}]+`, 'g');\nconst {replace} = SPACE;\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2019).\n *\n * @param {string} [string] - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n */\nconst normalizeSpace = function normalizeSpace(string) {\n  return replace.call(trim(string), reNormalize2018, SPACE);\n};\n\nexport default normalizeSpace;\n","import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\n\nconst EMPTY_STRING = '';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} [string] - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nconst replaceComments = function replaceComments(string, replacement) {\n  return replace.call(requireCoercibleToString(string), STRIP_COMMENTS, arguments.length > 1 ? toStr(replacement) : EMPTY_STRING);\n};\n\nexport default replaceComments;\n","import attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport toStringTag from 'to-string-tag-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport isPrimitive from 'is-primitive';\nimport normalise from 'normalize-space-x';\nimport deComment from 'replace-comments-x';\n\nconst FunctionCtr = attempt.constructor;\nconst SPACE = ' ';\nconst fToString = attempt.toString;\nconst funcTag = '[object Function]';\nconst genTag = '[object GeneratorFunction]';\nconst asyncTag = '[object AsyncFunction]';\nconst ctrRx = /^class /;\nconst {test} = ctrRx;\n\nconst hasNativeClass =\n  attempt(function attemptee() {\n    /* eslint-disable-next-line babel/new-cap */\n    return FunctionCtr('\"use strict\"; return class My {};')();\n  }).threw === false;\n\nconst testClassString = function testClassString(value) {\n  return test.call(ctrRx, normalise(deComment(fToString.call(value), SPACE)));\n};\n\nconst isES6ClassFn = function isES6ClassFunc(value) {\n  const result = attempt(testClassString, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return attempt.call(value, fToString).threw === false;\n};\n\nconst compareTags = function compareTags(value) {\n  const strTag = toStringTag(value);\n\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst isFunction = function isFunction(value, allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(allowClass));\n  }\n\n  if (hasNativeClass && toBoolean(allowClass) === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return compareTags(value);\n};\n\nexport default isFunction;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/* eslint-disable-next-line compat/compat */\nconst pToString = hasSymbols && Symbol.prototype.toString;\nconst isSymbolFn = typeof pToString === 'function' && isSymbol;\n/** @type {Function} */\nconst castString = ''.constructor;\n\n/**\n * The abstract operation ToString converts argument to a value of type String,\n * however the specification states that if the argument is a Symbol then a\n * 'TypeError' is thrown. This version also allows Symbols be converted to\n * a string. Other uncoercible exotics will still throw though.\n *\n * @param {*} [value] - The value to convert to a string.\n * @returns {string} The converted value.\n */\nconst toStringSymbolsSupported = function toStringSymbolsSupported(value) {\n  return isSymbolFn && isSymbolFn(value) ? pToString.call(value) : castString(value);\n};\n\nexport default toStringSymbolsSupported;\n","import isFunction from 'is-function-x';\nimport safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive';\n\n/**\n * Tests `callback` to see if it is a function, throws a `TypeError` if it is\n * not. Otherwise returns the `callback`.\n *\n * @param {*} callback - The argument to be tested.\n * @throws {TypeError} Throws if `callback` is not a function.\n * @returns {*} Returns `callback` if it is function.\n */\nconst assertIsFunction = function assertIsFunction(callback) {\n  if (isFunction(callback) === false) {\n    const msg = isPrimitive(callback) ? safeToString(callback) : '#<Object>';\n    throw new TypeError(`${msg} is not a function`);\n  }\n\n  return callback;\n};\n\nexport default assertIsFunction;\n","import hasSymbols from 'has-symbol-support-x';\nimport isPrimitive from 'is-primitive';\nimport isDate from 'is-date-object';\nimport isSymbol from 'is-symbol';\nimport isFunction from 'is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport isNil from 'is-nil-x';\n\nconst ZERO = 0;\nconst ONE = 1;\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void ZERO;\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst DEFAULT = 'default';\nconst StringCtr = STRING.constructor;\nconst NumberCtr = ZERO.constructor;\n/* eslint-disable-next-line compat/compat */\nconst symToPrimitive = hasSymbols && Symbol.toPrimitive;\n/* eslint-disable-next-line compat/compat */\nconst symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nconst toStringOrder = ['toString', 'valueOf'];\nconst toNumberOrder = ['valueOf', 'toString'];\nconst orderLength = 2;\n\nconst assertHint = function assertHint(hint) {\n  if (typeof hint !== 'string' || (hint !== NUMBER && hint !== STRING)) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  return hint;\n};\n\n/**\n * @param {*} ordinary - The ordinary to convert.\n * @param {*} hint - The hint.\n * @returns {*} - The primitive.\n */\nconst ordinaryToPrimitive = function ordinaryToPrimitive(ordinary, hint) {\n  requireObjectCoercible(ordinary);\n  assertHint(hint);\n\n  const methodNames = hint === STRING ? toStringOrder : toNumberOrder;\n  let method;\n  let result;\n  for (let i = ZERO; i < orderLength; i += ONE) {\n    method = ordinary[methodNames[i]];\n\n    if (isFunction(method)) {\n      result = method.call(ordinary);\n\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\n/**\n * @param {*} object - The object.\n * @param {*} property - The property.\n * @returns {undefined|Function} - The method.\n */\nconst getMethod = function getMethod(object, property) {\n  const func = object[property];\n\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(`${func} returned for property ${property} of object ${object} is not a function`);\n    }\n\n    return func;\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * Get the hint.\n *\n * @param {*} value - The value to compare.\n * @param {boolean} supplied - Was a value supplied.\n * @returns {string} - The hint string.\n */\nconst getHint = function getHint(value, supplied) {\n  if (supplied) {\n    if (value === StringCtr) {\n      return STRING;\n    }\n\n    if (value === NumberCtr) {\n      return NUMBER;\n    }\n  }\n\n  return DEFAULT;\n};\n\n/**\n * Get the primitive from the exotic.\n *\n * @param {*} value - The exotic.\n * @returns {*} - The primitive.\n */\nconst getExoticToPrim = function getExoticToPrim(value) {\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      return getMethod(value, symToPrimitive);\n    }\n\n    if (isSymbol(value)) {\n      return symValueOf;\n    }\n  }\n\n  return UNDEFINED;\n};\n\nconst evalExotic = function evalExotic(obj) {\n  const {exoticToPrim, input, hint} = obj;\n  const result = exoticToPrim.call(input, hint);\n\n  if (isPrimitive(result)) {\n    return result;\n  }\n\n  throw new TypeError('unable to convert exotic object to primitive');\n};\n\nconst evalPrimitive = function evalPrimitive(input, hint) {\n  const newHint = hint === DEFAULT && (isDate(input) || isSymbol(input)) ? STRING : hint;\n\n  return ordinaryToPrimitive(input, newHint === DEFAULT ? NUMBER : newHint);\n};\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {Function} [preferredType] - The preferred type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @see {http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive}\n */\nconst toPrimitive = function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  const hint = getHint(preferredType, arguments.length > ONE);\n  const exoticToPrim = getExoticToPrim(input);\n\n  return typeof exoticToPrim === 'undefined' ? evalPrimitive(input, hint) : evalExotic({exoticToPrim, input, hint});\n};\n\nexport default toPrimitive;\n","import NAN from 'nan-x';\nimport toStr from 'to-string-x';\nimport trimLeft from 'trim-left-x';\n\nconst nativeParseInt = parseInt;\n/**  @type {Function} */\nconst castNumber = (0).constructor;\n// noinspection JSPotentiallyInvalidConstructorUsage\nconst {charAt} = '';\nconst hexRegex = /^[-+]?0[xX]/;\nconst {test} = hexRegex;\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems). (ES2019).\n *\n * @param {string} [string] - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} [radix] - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nconst $parseInt = function $parseInt(string, radix) {\n  const str = trimLeft(toStr(string));\n\n  if (charAt.call(str, 0) === '\\u180E') {\n    return NAN;\n  }\n\n  return nativeParseInt(str, castNumber(radix) || (test.call(hexRegex, str) ? 16 : 10));\n};\n\nexport default $parseInt;\n","/**\n * The constant NaN derived mathematically by 0 / 0.\n *\n * @type number\n */\nexport default 0 / 0;\n","import isSymbol from 'is-symbol';\nimport toPrimitive from 'to-primitive-x';\nimport trim from 'trim-x';\nimport $parseInt from 'parse-int-x';\nimport NAN from 'nan-x';\n\nconst binaryRadix = 2;\nconst octalRadix = 8;\nconst testCharsCount = 2;\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a number';\n\nconst castNumber = testCharsCount.constructor;\nconst pStrSlice = ERROR_MESSAGE.slice;\n\nconst binaryRegex = /^0b[01]+$/i;\nconst RegExpConstructor = binaryRegex.constructor;\n// Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is\n// an own property of regexes. wtf.\nconst {test} = binaryRegex;\nconst isBinary = function isBinary(value) {\n  return test.call(binaryRegex, value);\n};\n\nconst octalRegex = /^0o[0-7]+$/i;\nconst isOctal = function isOctal(value) {\n  return test.call(octalRegex, value);\n};\n\nconst nonWSregex = new RegExpConstructor('[\\u0085\\u180e\\u200b\\ufffe]', 'g');\nconst hasNonWS = function hasNonWS(value) {\n  return test.call(nonWSregex, value);\n};\n\nconst invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nconst isInvalidHexLiteral = function isInvalidHexLiteral(value) {\n  return test.call(invalidHexLiteral, value);\n};\n\nconst assertNotSymbol = function assertNotSymbol(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\nconst parseBase = function parseBase(value, radix) {\n  return $parseInt(pStrSlice.call(value, testCharsCount), radix);\n};\n\nconst parseString = function parseString(toNum, value) {\n  if (isBinary(value)) {\n    return toNum(parseBase(value, binaryRadix));\n  }\n\n  if (isOctal(value)) {\n    return toNum(parseBase(value, octalRadix));\n  }\n\n  return null;\n};\n\nconst convertString = function convertString(toNum, value) {\n  const val = parseString(toNum, value);\n\n  if (val !== null) {\n    return val;\n  }\n\n  if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n    return NAN;\n  }\n\n  const trimmed = trim(value);\n\n  if (trimmed !== value) {\n    return toNum(trimmed);\n  }\n\n  return null;\n};\n\n/**\n * This method converts argument to a value of type Number. (ES2019).\n *\n * @param {*} [argument] - The argument to convert to a number.\n * @throws {TypeError} - If argument is a Symbol or not coercible.\n * @returns {*} The argument converted to a number.\n */\nconst toNumber = function toNumber(argument) {\n  const value = assertNotSymbol(toPrimitive(argument, castNumber));\n\n  if (typeof value === 'string') {\n    const val = convertString(toNumber, value);\n\n    if (val !== null) {\n      return val;\n    }\n  }\n\n  return castNumber(value);\n};\n\nexport default toNumber;\n","/**\n * This method determines whether the passed value is NaN and its type is\n * `Number`. It is a more robust version of the original, global isNaN().\n *\n * @param {*} [value] - The value to be tested for NaN.\n * @returns {boolean} `true` if the given value is NaN and its type is Number;\n *  otherwise, `false`.\n */\nconst isNaN = function isNaN(value) {\n  /* eslint-disable-next-line no-self-compare */\n  return value !== value;\n};\n\nexport default isNaN;\n","import numberIsNaN from 'is-nan-x';\nimport INFINITY from 'infinity-x';\n\n/**\n * This method determines whether the passed value is a finite number.\n *\n * @param {*} [number] - The value to be tested for finiteness.\n * @returns {boolean} A Boolean indicating whether or not the given value is a finite number.\n */\nconst isFinite = function isFinite(number) {\n  return typeof number === 'number' && numberIsNaN(number) === false && number !== INFINITY && number !== -INFINITY;\n};\n\nexport default isFinite;\n","/**\n * The constant value Infinity derived mathematically by 1 / 0.\n *\n * @type number\n */\nexport default 1 / 0;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\n\n/**\n * This method returns the sign of a number, indicating whether the number is positive,\n * negative or zero. (ES2019).\n *\n * @param {*} x - A number.\n * @returns {number} A number representing the sign of the given argument. If the argument\n * is a positive number, negative number, positive zero or negative zero, the function will\n * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n */\nconst sign = function sign(x) {\n  const n = toNumber(x);\n\n  if (n === 0 || numberIsNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n};\n\nexport default sign;\n","import toNumber from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\nimport numberIsFinite from 'is-finite-x';\nimport mathSign from 'math-sign-x';\n\nconst {abs, floor} = Math;\n\n/**\n * Converts `value` to an integer. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toInteger = function toInteger(value) {\n  const number = toNumber(value);\n\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return mathSign(number) * floor(abs(number));\n};\n\nexport default toInteger;\n","import toInteger from 'to-integer-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object. (ES2019).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toLength = function toLength(value) {\n  const len = toInteger(value);\n\n  // includes converting -0 to +0\n  if (len <= 0) {\n    return 0;\n  }\n\n  if (len > MAX_SAFE_INTEGER) {\n    return MAX_SAFE_INTEGER;\n  }\n\n  return len;\n};\n\nexport default toLength;\n","const string = 'a';\nconst boxedString = {}.constructor(string);\n\n/**\n * Check failure of by-index access of string characters (IE < 9)\n * and failure of `0 in boxedString` (Rhino).\n *\n * `true` if no failure; otherwise `false`.\n *\n * @type boolean\n */\nconst hasBoxed = boxedString[0] === string && 0 in boxedString;\n\nexport default hasBoxed;\n","import hasBoxed from 'has-boxed-string-x';\nimport isString from 'is-string';\n\nconst EMPTY_STRING = '';\nconst strSplit = EMPTY_STRING.split;\nconst isStringFn = hasBoxed === false && typeof strSplit === 'function' && isString;\n\n/**\n * This method tests if a value is a string with the boxed bug; splits to an\n * array for iteration; otherwise returns the original value.\n *\n * @param {*} [value] - The value to be tested.\n * @returns {*} An array or characters if value was a string with the boxed bug;\n *  otherwise the value.\n */\nconst splitIfBoxedBug = function splitIfBoxedBug(value) {\n  return isStringFn && isStringFn(value) ? strSplit.call(value, EMPTY_STRING) : value;\n};\n\nexport default splitIfBoxedBug;\n","import toObject from 'to-object-x';\nimport toLength from 'to-length-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\nimport assertIsFunction from 'assert-is-function-x';\n\nconst performCallback = function performCallback(args) {\n  const [noThis, thisArg, callBack, iterable, index, object] = args;\n  const item = iterable[index];\n\n  return noThis ? callBack(item, index, object) : callBack.call(thisArg, item, index, object);\n};\n\nconst getIterableLengthPair = function getIterableLengthPair(object) {\n  const iterable = splitIfBoxedBug(object);\n\n  return [iterable, toLength(iterable.length)];\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method tests whether some element in the array passes the test\n * implemented by the provided function.\n *\n * @function any\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to test for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @returns {boolean} `true` if the callback function returns a truthy value for\n *  any array element; otherwise, `false`.\n */\n// eslint-enable jsdoc/check-param-names\nconst any = function any(array, callBack /* , thisArg */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n  const [iterable, length] = getIterableLengthPair(object);\n  /* eslint-disable-next-line prefer-rest-params,no-void */\n  const thisArg = arguments.length > 2 ? arguments[2] : void 0;\n  const noThis = typeof thisArg === 'undefined';\n\n  if (length) {\n    for (let index = 0; index < length; index += 1) {\n      if (performCallback([noThis, thisArg, callBack, iterable, index, object])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nexport default any;\n","import any from 'array-any-x';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method executes a provided function once for each array element.\n *\n * @function all\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to execute for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n */\n// eslint-enable jsdoc/check-param-names\nconst all = function all(array, callBack /* , thisArg */) {\n  const iteratee = function iteratee() {\n    /* eslint-disable-next-line prefer-rest-params,babel/no-invalid-this */\n    callBack.call(this, arguments[0], arguments[1], arguments[2]);\n  };\n\n  /* eslint-disable-next-line prefer-rest-params */\n  any(array, iteratee, arguments[2]);\n};\n\nexport default all;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport toBoolean from 'to-boolean-x';\nimport all from 'array-all-x';\n\nconst nfe = [].forEach;\nconst nativeForEach = typeof nfe === 'function' && nfe;\n\nconst test1 = function test1() {\n  let spy = 0;\n  const res = attempt.call([1, 2], nativeForEach, (item) => {\n    spy += item;\n  });\n\n  return res.threw === false && typeof res.value === 'undefined' && spy === 3;\n};\n\nconst test2 = function test2() {\n  let spy = '';\n  const res = attempt.call(toObject('abc'), nativeForEach, (item) => {\n    spy += item;\n  });\n\n  return res.threw === false && typeof res.value === 'undefined' && spy === 'abc';\n};\n\nconst test3 = function test3() {\n  let spy = 0;\n  const res = attempt.call(\n    (function getArgs() {\n      /* eslint-disable-next-line prefer-rest-params */\n      return arguments;\n    })(1, 2, 3),\n    nativeForEach,\n    function spyAdd1(item) {\n      spy += item;\n    },\n  );\n\n  return res.threw === false && typeof res.value === 'undefined' && spy === 6;\n};\n\nconst test4 = function test4() {\n  let spy = 0;\n  const res = attempt.call({0: 1, 1: 2, 3: 3, 4: 4, length: 4}, nativeForEach, function spyAdd2(item) {\n    spy += item;\n  });\n\n  return res.threw === false && typeof res.value === 'undefined' && spy === 6;\n};\n\nconst test5 = function test5() {\n  const doc = typeof document !== 'undefined' && document;\n\n  if (doc) {\n    let spy = null;\n    const fragment = doc.createDocumentFragment();\n    const div = doc.createElement('div');\n    fragment.appendChild(div);\n    const res = attempt.call(fragment.childNodes, nativeForEach, function spyAssign(item) {\n      spy = item;\n    });\n\n    return res.threw === false && typeof res.value === 'undefined' && spy === div;\n  }\n\n  return true;\n};\n\nconst test6 = function test6() {\n  const isStrict = (function returnIsStrict() {\n    /* eslint-disable-next-line babel/no-invalid-this */\n    return toBoolean(this) === false;\n  })();\n\n  if (isStrict) {\n    let spy = null;\n\n    const thisTest = function thisTest() {\n      /* eslint-disable-next-line babel/no-invalid-this */\n      spy = typeof this === 'string';\n    };\n\n    const res = attempt.call([1], nativeForEach, thisTest, 'x');\n\n    return res.threw === false && typeof res.value === 'undefined' && spy === true;\n  }\n\n  return true;\n};\n\nconst test7 = function test7() {\n  const spy = {};\n  const fn =\n    'return nativeForEach.call(\"foo\", function (_, __, context) {' +\n    'if (toBoolean(context) === false || typeof context !== \"object\") {' +\n    'spy.value = true;}});';\n\n  /* eslint-disable-next-line no-new-func */\n  const res = attempt(Function('nativeForEach', 'spy', 'toBoolean', fn), nativeForEach, spy, toBoolean);\n\n  return res.threw === false && typeof res.value === 'undefined' && spy.value !== true;\n};\n\nconst isWorking = toBoolean(nativeForEach) && test1() && test2() && test3() && test4() && test5() && test6() && test7();\n\nconst patchedNative = function forEach(array, callBack /* , thisArg */) {\n  requireObjectCoercible(array);\n  const args = [assertIsFunction(callBack)];\n\n  if (arguments.length > 2) {\n    /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n    args[1] = arguments[2];\n  }\n\n  return nativeForEach.apply(array, args);\n};\n\nexport const implementation = function forEach(array, callBack /* , thisArg */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n  const iteratee = function iteratee() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const i = arguments[1];\n\n    /* eslint-disable-next-line prefer-rest-params */\n    if (i in arguments[2]) {\n      /* eslint-disable-next-line prefer-rest-params,babel/no-invalid-this */\n      callBack.call(this, arguments[0], i, object);\n    }\n  };\n\n  /* eslint-disable-next-line prefer-rest-params */\n  all(object, iteratee, arguments[2]);\n};\n\n/**\n * This method executes a provided function once for each array element.\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to execute for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n */\nconst $forEach = isWorking ? patchedNative : implementation;\n\nexport default $forEach;\n","import hasSymbols from 'has-symbol-support-x';\nimport toPrimitive from 'to-primitive-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method Converts argument to a value that can be used as a property key.\n *\n * @param {*} argument - The argument to convert to a property key.\n * @throws {TypeError} If argument is not a symbol and is not coercible to a string.\n * @returns {string|symbol} The converted argument.\n */\nconst toPropertyKey = function toPropertyKey(argument) {\n  const key = toPrimitive(argument, String);\n\n  return hasSymbols && typeof key === 'symbol' ? key : toStr(key);\n};\n\nexport default toPropertyKey;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport has from 'has-own-property-x';\nimport isFunction from 'is-function-x';\nimport assertIsObject from 'assert-is-object-x';\nimport toBoolean from 'to-boolean-x';\n\nconst ObjectCtr = {}.constructor;\nconst nd = ObjectCtr.defineProperty;\nconst nativeDefProp = typeof nd === 'function' && nd;\nlet definePropertyFallback;\n\nconst toPropertyDescriptor = function toPropertyDescriptor(desc) {\n  const object = toObject(desc);\n  const descriptor = {};\n\n  if (has(object, 'enumerable')) {\n    descriptor.enumerable = toBoolean(object.enumerable);\n  }\n\n  if (has(object, 'configurable')) {\n    descriptor.configurable = toBoolean(object.configurable);\n  }\n\n  if (has(object, 'value')) {\n    descriptor.value = object.value;\n  }\n\n  if (has(object, 'writable')) {\n    descriptor.writable = toBoolean(object.writable);\n  }\n\n  if (has(object, 'get')) {\n    const getter = object.get;\n\n    if (typeof getter !== 'undefined' && isFunction(getter) === false) {\n      throw new TypeError('getter must be a function');\n    }\n\n    descriptor.get = getter;\n  }\n\n  if (has(object, 'set')) {\n    const setter = object.set;\n\n    if (typeof setter !== 'undefined' && isFunction(setter) === false) {\n      throw new TypeError('setter must be a function');\n    }\n\n    descriptor.set = setter;\n  }\n\n  if ((has(descriptor, 'get') || has(descriptor, 'set')) && (has(descriptor, 'value') || has(descriptor, 'writable'))) {\n    throw new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n  }\n\n  return descriptor;\n};\n\n// ES5 15.2.3.6\n// http://es5.github.com/#x15.2.3.6\n\n// Patch for WebKit and IE8 standard mode\n// Designed by hax <hax.github.com>\n// related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n// IE8 Reference:\n//     http://msdn.microsoft.com/en-us/library/dd282900.aspx\n//     http://msdn.microsoft.com/en-us/library/dd229916.aspx\n// WebKit Bugs:\n//     https://bugs.webkit.org/show_bug.cgi?id=36423\n\n/**\n * This method defines a new property directly on an object, or modifies an\n * existing property on an object, and returns the object.\n *\n * @param {object} object - The object on which to define the property.\n * @param {string} property - The name of the property to be defined or modified.\n * @param {object} descriptor - The descriptor for the property being defined or modified.\n * @returns {object} The object that was passed to the function.\n * });.\n */\nlet $defineProperty;\n\n// check whether defineProperty works if it's given. Otherwise, shim partially.\nif (nativeDefProp) {\n  const testWorksWith = function testWorksWith(object) {\n    const testResult = attempt(nativeDefProp, object, 'sentinel', {});\n\n    return testResult.threw === false && testResult.value === object && 'sentinel' in object;\n  };\n\n  const doc = typeof document !== 'undefined' && document;\n\n  if (testWorksWith({}) && (toBoolean(doc) === false || testWorksWith(doc.createElement('div')))) {\n    $defineProperty = function defineProperty(object, property, descriptor) {\n      return nativeDefProp(assertIsObject(object), toPropertyKey(property), toPropertyDescriptor(descriptor));\n    };\n  } else {\n    definePropertyFallback = nativeDefProp;\n  }\n}\n\nif (toBoolean(nativeDefProp) === false || definePropertyFallback) {\n  const prototypeOfObject = ObjectCtr.prototype;\n  // If JS engine supports accessors creating shortcuts.\n  const supportsAccessors = has(prototypeOfObject, '__defineGetter__');\n  /* eslint-disable-next-line no-underscore-dangle */\n  const defineGetter = supportsAccessors && prototypeOfObject.__defineGetter_;\n  /* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\n  const defineSetter = supportsAccessors && prototypeOfObject.__defineSetter__;\n  /* eslint-disable-next-line no-underscore-dangle */\n  const lookupGetter = supportsAccessors && prototypeOfObject.__lookupGetter__;\n  /* eslint-disable-next-line no-underscore-dangle */\n  const lookupSetter = supportsAccessors && prototypeOfObject.__lookupSetter__;\n\n  $defineProperty = function defineProperty(object, property, descriptor) {\n    assertIsObject(object);\n    const propKey = toPropertyKey(property);\n    const propDesc = toPropertyDescriptor(descriptor);\n\n    // make a valiant attempt to use the real defineProperty for IE8's DOM elements.\n    if (definePropertyFallback) {\n      const result = attempt.call(ObjectCtr, definePropertyFallback, object, propKey, propDesc);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    // If it's a data property.\n    if (has(propDesc, 'value')) {\n      // fail silently if 'writable', 'enumerable', or 'configurable' are requested but not supported\n      if (supportsAccessors && (lookupGetter.call(object, propKey) || lookupSetter.call(object, propKey))) {\n        // As accessors are supported only on engines implementing\n        // `__proto__` we can safely override `__proto__` while defining\n        // a property to make sure that we don't hit an inherited accessor.\n        /* eslint-disable-next-line no-proto */\n        const prototype = object.__proto__;\n        /* eslint-disable-next-line no-proto */\n        object.__proto__ = prototypeOfObject;\n        // Deleting a property anyway since getter / setter may be defined on object itself.\n        delete object[propKey];\n        object[propKey] = propDesc.value;\n        // Setting original `__proto__` back now.\n        /* eslint-disable-next-line no-proto */\n        object.__proto__ = prototype;\n      } else {\n        object[propKey] = propDesc.value;\n      }\n    } else {\n      if (supportsAccessors === false && (propDesc.get || propDesc.set)) {\n        throw new TypeError('getters & setters can not be defined on this javascript engine');\n      }\n\n      // If we got that far then getters and setters can be defined !!\n      if (propDesc.get) {\n        defineGetter.call(object, propKey, propDesc.get);\n      }\n\n      if (propDesc.set) {\n        defineSetter.call(object, propKey, propDesc.set);\n      }\n    }\n\n    return object;\n  };\n}\n\nconst defProp = $defineProperty;\n\nexport default defProp;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\n\nconst hop = {}.hasOwnProperty;\n\n/**\n * The `hasOwnProperty` method returns a boolean indicating whether\n * the `object` has the specified `property`. Does not attempt to fix known\n * issues in older browsers, but does ES6ify the method.\n *\n * @param {!object} object - The object to test.\n * @throws {TypeError} If object is null or undefined.\n * @param {string|number|symbol} property - The name or Symbol of the property to test.\n * @returns {boolean} `true` if the property is set on `object`, else `false`.\n */\nconst hasOwnProperty = function hasOwnProperty(object, property) {\n  return hop.call(toObject(object), toPropertyKey(property));\n};\n\nexport default hasOwnProperty;\n","import safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive';\n\n/**\n * Tests `value` to see if it is an object, throws a `TypeError` if it is\n * not. Otherwise returns the `value`.\n *\n * @param {*} value - The argument to be tested.\n * @throws {TypeError} Throws if `value` is not an object.\n * @returns {*} Returns `value` if it is an object.\n */\nconst assertIsObject = function assertIsObject(value) {\n  if (isPrimitive(value)) {\n    throw new TypeError(`${safeToString(value)} is not an object`);\n  }\n\n  return value;\n};\n\nexport default assertIsObject;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport attempt from 'attempt-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport owns from 'has-own-property-x';\nimport isPrimitive from 'is-primitive';\nimport isString from 'is-string';\nimport isIndex from 'is-index-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\nimport toBoolean from 'to-boolean-x';\n\nconst EMPTY_STRING = '';\nconst {charAt} = EMPTY_STRING;\nconst ObjectCtr = {}.constructor;\nconst ngopd = ObjectCtr.getOwnPropertyDescriptor;\nconst nativeGOPD = typeof ngopd === 'function' && ngopd;\nlet getOPDFallback1;\nlet getOPDFallback2;\n\n// ES5 15.2.3.3\n// http://es5.github.com/#x15.2.3.3\n\nconst doesGOPDWork = function doesGOPDWork(object, prop) {\n  object[toPropertyKey(prop)] = 0;\n  const testResult = attempt(nativeGOPD, object, prop);\n\n  return testResult.threw === false && testResult.value.value === 0;\n};\n\n// check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\n/**\n * This method returns a property descriptor for an own property (that is,\n * one directly present on an object and not in the object's prototype chain)\n * of a given object.\n *\n * @param {*} object - The object in which to look for the property.\n * @param {*} property - The name of the property whose description is to be retrieved.\n * @returns {object} A property descriptor of the given property if it exists on the object, undefined otherwise.\n */\nlet $getOwnPropertyDescriptor;\n\nif (nativeGOPD) {\n  const doc = typeof document !== 'undefined' && document;\n  const getOPDWorksOnDom = doc ? doesGOPDWork(doc.createElement('div'), 'sentinel') : true;\n\n  if (getOPDWorksOnDom) {\n    const res = attempt(nativeGOPD, toObject('abc'), 1);\n    const worksWithStr = res.threw === false && res.value && res.value.value === 'b';\n\n    if (worksWithStr) {\n      const getOPDWorksOnObject = doesGOPDWork({}, 'sentinel');\n\n      if (getOPDWorksOnObject) {\n        const worksWithPrim = attempt(nativeGOPD, 42, 'name').threw === false;\n        /* eslint-disable-next-line compat/compat */\n        const worksWithObjSym = hasSymbolSupport && doesGOPDWork({}, toObject(Symbol(EMPTY_STRING)));\n\n        if (worksWithObjSym) {\n          if (worksWithPrim) {\n            $getOwnPropertyDescriptor = nativeGOPD;\n          } else {\n            $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n              return nativeGOPD(toObject(object), property);\n            };\n          }\n        } else if (worksWithPrim) {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(object, toPropertyKey(property));\n          };\n        } else {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(toObject(object), toPropertyKey(property));\n          };\n        }\n      } else {\n        getOPDFallback1 = nativeGOPD;\n      }\n    } else {\n      getOPDFallback2 = nativeGOPD;\n    }\n  }\n}\n\nif (toBoolean($getOwnPropertyDescriptor) === false || getOPDFallback1 || getOPDFallback2) {\n  const prototypeOfObject = ObjectCtr.prototype;\n\n  // If JS engine supports accessors creating shortcuts.\n  let lookupGetter;\n  let lookupSetter;\n  const supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n\n  if (supportsAccessors) {\n    /* eslint-disable-next-line no-underscore-dangle */\n    const lg = prototypeOfObject.__lookupGetter__;\n    /* eslint-disable-next-line no-underscore-dangle */\n    const ls = prototypeOfObject.__lookupSetter__;\n    lookupGetter = function $lookupGetter(object, property) {\n      return lg.call(object, property);\n    };\n\n    lookupSetter = function $lookupSetter(object, property) {\n      return ls.call(object, property);\n    };\n  }\n\n  $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n    const obj = toObject(object);\n    const propKey = toPropertyKey(property);\n\n    let result;\n\n    // make a valiant attempt to use the real getOwnPropertyDescriptor for I8's DOM elements.\n    if (getOPDFallback1) {\n      result = attempt.call(toObject, getOPDFallback1, obj, propKey);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    const isStringIndex = isString(obj) && isIndex(propKey, obj.length);\n\n    if (getOPDFallback2 && isStringIndex === false) {\n      result = attempt.call(toObject, getOPDFallback2, obj, propKey);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    /* eslint-disable-next-line no-void */\n    let descriptor = void 0;\n\n    // If object does not owns property return undefined immediately.\n    if (isStringIndex === false && owns(obj, propKey) === false) {\n      return descriptor;\n    }\n\n    // If object has a property then it's for sure `configurable`, and\n    // probably `enumerable`. Detect enumerability though.\n    descriptor = {\n      configurable: isPrimitive(object) === false && isStringIndex === false,\n      enumerable: propertyIsEnumerable(obj, propKey),\n    };\n\n    // If JS engine supports accessor properties then property may be a\n    // getter or setter.\n    if (supportsAccessors) {\n      // Unfortunately `__lookupGetter__` will return a getter even\n      // if object has own non getter property along with a same named\n      // inherited getter. To avoid misbehavior we temporary remove\n      // `__proto__` so that `__lookupGetter__` will return getter only\n      // if it's owned by an object.\n      /* eslint-disable-next-line no-proto */\n      const prototype = obj.__proto__;\n      const notPrototypeOfObject = obj !== prototypeOfObject;\n\n      // avoid recursion problem, breaking in Opera Mini when\n      // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n      // or any other Object.prototype accessor\n      if (notPrototypeOfObject) {\n        /* eslint-disable-next-line no-proto */\n        obj.__proto__ = prototypeOfObject;\n      }\n\n      const getter = lookupGetter(obj, propKey);\n      const setter = lookupSetter(obj, propKey);\n\n      if (notPrototypeOfObject) {\n        // Once we have getter and setter we can put values back.\n        /* eslint-disable-next-line no-proto */\n        obj.__proto__ = prototype;\n      }\n\n      if (getter || setter) {\n        if (getter) {\n          descriptor.get = getter;\n        }\n\n        if (setter) {\n          descriptor.set = setter;\n        }\n\n        // If it was accessor property we're done and return here\n        // in order to avoid adding `value` to the descriptor.\n        return descriptor;\n      }\n    }\n\n    // If we got this far we know that object has an own property that is\n    // not an accessor so we set it as a value and return descriptor.\n    if (isStringIndex) {\n      descriptor.value = charAt.call(obj, propKey);\n      descriptor.writable = false;\n    } else {\n      descriptor.value = obj[propKey];\n      descriptor.writable = true;\n    }\n\n    return descriptor;\n  };\n}\n\nconst gOPS = $getOwnPropertyDescriptor;\n\nexport default gOPS;\n","import attempt from 'attempt-x';\nimport toStringTag from 'to-string-tag-x';\n\nconst nia = [].isArray;\nconst nativeIsArray = typeof nia === 'function' && nia;\n\nconst testResult = attempt(function attemptee() {\n  return nativeIsArray([]) === true && nativeIsArray({length: 0}) === false;\n});\n\nconst isWorking = testResult.threw === false && testResult.value === true;\n\nexport const implementation = function isArray(value) {\n  return toStringTag(value) === '[object Array]';\n};\n\n/**\n * Determines whether the passed value is an Array.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} - True if an array; otherwise false.\n */\nconst isArray = isWorking ? nativeIsArray : implementation;\n\nexport default isArray;\n","import toObject from 'to-object-x';\nimport toInteger from 'to-integer-x';\nimport toLength from 'to-length-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\n\nconst getMax = function _getMax(a, b) {\n  return a >= b ? a : b;\n};\n\nconst getMin = function _getMin(a, b) {\n  return a <= b ? a : b;\n};\n\nconst setRelative = function _setRelative(value, length) {\n  return value < 0 ? getMax(length + value, 0) : getMin(value, length);\n};\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {!object} arrayLike - The array like object to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice([0,1,2,3,4],1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(arrayLike, start, end) {\n  const iterable = splitIfBoxedBug(toObject(arrayLike));\n  const length = toLength(iterable.length);\n  let k = setRelative(toInteger(start), length);\n  const relativeEnd = typeof end === 'undefined' ? length : toInteger(end);\n  const finalEnd = setRelative(relativeEnd, length);\n  const val = [];\n  val.length = getMax(finalEnd - k, 0);\n  let next = 0;\n  while (k < finalEnd) {\n    if (k in iterable) {\n      val[next] = iterable[k];\n    }\n\n    next += 1;\n    k += 1;\n  }\n\n  return val;\n};\n\nexport default slice;\n","import isFunction from 'is-function-x';\nimport isPrimitive from 'is-primitive';\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not a\n * primitive and not a function.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nconst isObjectLike = function isObjectLike(value) {\n  return isPrimitive(value) === false && isFunction(value, true) === false;\n};\n\nexport default isObjectLike;\n","import toNumber from 'to-number-x';\n\nconst getMaxMin = function getMaxMin(args) {\n  const minVal = toNumber(args[1]);\n  const result = args.length < 3 ? {max: minVal, min: 0} : {max: toNumber(args[2]), min: minVal};\n\n  if (result.min > result.max) {\n    throw new RangeError('\"min\" must be less than \"max\"');\n  }\n\n  return result;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method clamp a number to min and max limits inclusive.\n *\n * @param {number} value - The number to be clamped.\n * @param {number} [min=0] - The minimum number.\n * @param {number} max - The maximum number.\n * @throws {RangeError} If min > max.\n * @returns {number} The clamped number.\n */\n// eslint-enable jsdoc/check-param-names\nconst clamp = function clamp(value) {\n  const number = toNumber(value);\n\n  if (arguments.length < 2) {\n    return number;\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  const {max, min} = getMaxMin(arguments);\n\n  if (number < min) {\n    return min;\n  }\n\n  if (number > max) {\n    return max;\n  }\n\n  return number;\n};\n\nexport default clamp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport toInteger from 'to-integer-x';\nimport toNumber from 'to-number-x';\nimport mathClamp from 'math-clamp-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\nconst rxTest = reIsUint.test;\n\n/**\n * This method determines whether the passed value is a zero based index.\n * JavaScript arrays are zero-indexed: the first element of an array is at\n * index 0, and the last element is at the index equal to the value of the\n * array's length property minus 1.\n *\n * @param {number|string} value - The value to be tested for being a zero based index.\n * @param {number} [length=MAX_SAFE_INTEGER] - The length that sets the upper bound.\n * @returns {boolean} A Boolean indicating whether or not the given value is a\n * zero based index within bounds.\n */\nconst isIndex = function isIndex(value, length) {\n  const string = safeToString(value);\n\n  if (rxTest.call(reIsUint, string) === false) {\n    return false;\n  }\n\n  const number = toNumber(string);\n\n  if (arguments.length > 1) {\n    return number < mathClamp(toInteger(length), MAX_SAFE_INTEGER);\n  }\n\n  return number < MAX_SAFE_INTEGER;\n};\n\nexport default isIndex;\n","import toPropertyKey from 'to-property-key-x';\nimport toObject from 'to-object-x';\n\nconst propIsEnumerable = {}.propertyIsEnumerable;\n\n/**\n * This method returns a Boolean indicating whether the specified property is\n * enumerable. Does not attempt to fix bugs in IE<9 or old Opera, otherwise it\n * does ES6ify the method.\n *\n * @param {!object} object - The object on which to test the property.\n * @param {string|symbol} property - The name of the property to test.\n * @throws {TypeError} If target is null or undefined.\n * @returns {boolean} A Boolean indicating whether the specified property is\n *  enumerable.\n */\nconst propertyIsEnumerable = function propertyIsEnumerable(object, property) {\n  return propIsEnumerable.call(toObject(object), toPropertyKey(property));\n};\n\nexport default propertyIsEnumerable;\n","import toObject from 'to-object-x';\nimport attempt from 'attempt-x';\nimport isArray from 'is-array-x';\nimport isArguments from 'is-arguments';\nimport arraySlice from 'array-like-slice-x';\nimport splitIfBoxed from 'split-if-boxed-bug-x';\nimport isString from 'is-string';\nimport isRegexp from 'is-regexp-x';\nimport has from 'has-own-property-x';\nimport objKeys from 'object-keys';\n\nconst ObjectCtr = {}.constructor;\nconst nativeKeys = typeof ObjectCtr.keys === 'function' && ObjectCtr.keys;\n\nlet isWorking;\nlet throwsWithNull;\nlet worksWithPrim;\nlet worksWithRegex;\nlet worksWithArgs;\nlet worksWithStr;\n\nif (nativeKeys) {\n  const isCorrectRes = function _isCorrectRes(r, length) {\n    return r.threw === false && isArray(r.value) && r.value.length === length;\n  };\n\n  const either = function _either(r, a, b) {\n    const x = r.value[0];\n    const y = r.value[1];\n\n    return (x === a && y === b) || (x === b && y === a);\n  };\n\n  let testObj = {a: 1, b: 2};\n  let res = attempt(nativeKeys, testObj);\n  isWorking = isCorrectRes(res, 2) && either(res, 'a', 'b');\n\n  if (isWorking) {\n    testObj = Object('a');\n    testObj.y = 1;\n    res = attempt(nativeKeys, testObj);\n    isWorking = isCorrectRes(res, 2) && either(res, '0', 'y');\n  }\n\n  if (isWorking) {\n    throwsWithNull = attempt(nativeKeys, null).threw;\n    worksWithPrim = isCorrectRes(attempt(nativeKeys, 42), 0);\n    worksWithRegex = attempt(nativeKeys, /a/g).threw === false;\n\n    res = attempt(\n      nativeKeys,\n      (function getArgs() {\n        /* eslint-disable-next-line prefer-rest-params */\n        return arguments;\n      })(1, 2),\n    );\n\n    worksWithArgs = isCorrectRes(res, 2) && either(res, '0', '1');\n\n    res = attempt(nativeKeys, Object('ab'));\n    worksWithStr = isCorrectRes(res, 2) && either(res, '0', '1');\n  }\n}\n\n/**\n * This method returns an array of a given object's own enumerable properties,\n * in the same order as that provided by a for...in loop (the difference being\n * that a for-in loop enumerates properties in the prototype chain as well).\n *\n * @param {*} obj - The object of which the enumerable own properties are to be returned.\n * @returns {Array} An array of strings that represent all the enumerable properties of the given object.\n */\nlet objectKeys;\n\nif (isWorking) {\n  if (throwsWithNull && worksWithPrim && worksWithRegex && worksWithArgs && worksWithStr) {\n    objectKeys = nativeKeys;\n  } else {\n    objectKeys = function keys(object) {\n      let obj = toObject ? toObject(object) : object;\n\n      if (worksWithArgs !== true && isArguments(obj)) {\n        obj = arraySlice(obj);\n      } else if (worksWithStr !== true && isString(obj)) {\n        obj = splitIfBoxed(obj);\n      } else if (worksWithRegex !== true && isRegexp(obj)) {\n        const regexKeys = [];\n        /* eslint-disable-next-line no-restricted-syntax */\n        for (const key in obj) {\n          // noinspection JSUnfilteredForInLoop\n          if (has(obj, key)) {\n            regexKeys[regexKeys.length] = key;\n          }\n        }\n\n        return regexKeys;\n      }\n\n      return nativeKeys(obj);\n    };\n  }\n} else {\n  objectKeys = function keys(object) {\n    return objKeys(toObject(object));\n  };\n}\n\nconst ok = objectKeys;\n\nexport default ok;\n","import isObjectLike from 'is-object-like-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport has from 'has-own-property-x';\nimport gOPD from 'object-get-own-property-descriptor-x';\nimport defineProperty from 'object-define-property-x';\nimport toStringTag from 'to-string-tag-x';\n\nconst regexExec = /none/.exec;\nconst regexClass = '[object RegExp]';\n\nconst tryRegexExecCall = function tryRegexExec(value, descriptor) {\n  try {\n    value.lastIndex = 0;\n    regexExec.call(value);\n\n    return true;\n  } catch (e) {\n    return false;\n  } finally {\n    defineProperty(value, 'lastIndex', descriptor);\n  }\n};\n\n/**\n * This method tests if a value is a regex.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} `true` if value is a regex; otherwise `false`.\n */\nconst isRegex = function isRegex(value) {\n  if (isObjectLike(value) === false) {\n    return false;\n  }\n\n  if (hasToStringTag === false) {\n    return toStringTag(value) === regexClass;\n  }\n\n  const descriptor = gOPD(value, 'lastIndex');\n  const hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\n  if (hasLastIndexDataProperty !== true) {\n    return false;\n  }\n\n  return tryRegexExecCall(value, descriptor);\n};\n\nexport default isRegex;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport all from 'array-all-x';\nimport toBoolean from 'to-boolean-x';\n\nconst nf = [].filter;\nconst nativeFilter = typeof nf === 'function' && nf;\n\nconst test1 = function test1() {\n  let spy = 0;\n  const res = attempt.call([1, 2], nativeFilter, function spyAdd1(item) {\n    spy += item;\n\n    return false;\n  });\n\n  return res.threw === false && res.value && res.value.length === 0 && spy === 3;\n};\n\nconst test2 = function test2() {\n  let spy = '';\n  const res = attempt.call(toObject('abc'), nativeFilter, function spyAdd2(item, index) {\n    spy += item;\n\n    return index === 1;\n  });\n\n  return res.threw === false && res.value && res.value.length === 1 && res.value[0] === 'b' && spy === 'abc';\n};\n\nconst test3 = function test3() {\n  let spy = 0;\n  const res = attempt.call(\n    (function getArgs() {\n      /* eslint-disable-next-line prefer-rest-params */\n      return arguments;\n    })(1, 2, 3),\n    nativeFilter,\n    function spyAdd3(item, index) {\n      spy += item;\n\n      return index === 2;\n    },\n  );\n\n  return res.threw === false && res.value && res.value.length === 1 && res.value[0] === 3 && spy === 6;\n};\n\nconst test4 = function test4() {\n  let spy = 0;\n  const res = attempt.call({0: 1, 1: 2, 3: 3, 4: 4, length: 4}, nativeFilter, function spyAdd4(item) {\n    spy += item;\n\n    return false;\n  });\n\n  return res.threw === false && res.value && res.value.length === 0 && spy === 6;\n};\n\nconst getTest5Result = function getTest5Result(args) {\n  const [res, div, spy] = args;\n\n  return res.threw === false && res.value && res.value.length === 1 && res.value[0] === div && spy === div;\n};\n\nconst test5 = function test5() {\n  const doc = typeof document !== 'undefined' && document;\n\n  if (doc) {\n    let spy = null;\n    const fragment = doc.createDocumentFragment();\n    const div = doc.createElement('div');\n    fragment.appendChild(div);\n    const res = attempt.call(fragment.childNodes, nativeFilter, function spyAssign(item) {\n      spy = item;\n\n      return item;\n    });\n\n    return getTest5Result([res, div, spy]);\n  }\n\n  return true;\n};\n\nconst test6 = function test6() {\n  const isStrict = (function returnIsStrict() {\n    /* eslint-disable-next-line babel/no-invalid-this */\n    return toBoolean(this) === false;\n  })();\n\n  if (isStrict) {\n    let spy = null;\n\n    const testThis = function testThis() {\n      /* eslint-disable-next-line babel/no-invalid-this */\n      spy = typeof this === 'string';\n    };\n\n    const res = attempt.call([1], nativeFilter, testThis, 'x');\n\n    return res.threw === false && res.value && res.value.length === 0 && spy === true;\n  }\n\n  return true;\n};\n\nconst test7 = function test7() {\n  const spy = {};\n  const fn =\n    'return nativeFilter.call(\"foo\", function (_, __, context) {' +\n    'if (castBoolean(context) === false || typeof context !== \"object\") {' +\n    'spy.value = true;}});';\n\n  /* eslint-disable-next-line no-new-func */\n  const res = attempt(Function('nativeFilter', 'spy', 'castBoolean', fn), nativeFilter, spy, toBoolean);\n\n  return res.threw === false && res.value && res.value.length === 0 && spy.value !== true;\n};\n\nconst isWorking = toBoolean(nativeFilter) && test1() && test2() && test3() && test4() && test5() && test6() && test7();\n\nconst patchedFilter = function filter(array, callBack /* , thisArg */) {\n  requireObjectCoercible(array);\n  const args = [assertIsFunction(callBack)];\n\n  if (arguments.length > 2) {\n    /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n    args[1] = arguments[2];\n  }\n\n  return nativeFilter.apply(array, args);\n};\n\nexport const implementation = function filter(array, callBack /* , thisArg */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n\n  const result = [];\n\n  const predicate = function predicate() {\n    /* eslint-disable-next-line prefer-rest-params */\n    const i = arguments[1];\n\n    /* eslint-disable-next-line prefer-rest-params */\n    if (i in arguments[2]) {\n      /* eslint-disable-next-line prefer-rest-params */\n      const item = arguments[0];\n\n      /* eslint-disable-next-line babel/no-invalid-this */\n      if (callBack.call(this, item, i, object)) {\n        result[result.length] = item;\n      }\n    }\n  };\n\n  /* eslint-disable-next-line prefer-rest-params */\n  all(object, predicate, arguments[2]);\n\n  return result;\n};\n\n/**\n * This method creates a new array with all elements that pass the test\n * implemented by the provided function.\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function is a predicate, to test each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @returns {Array} A new array with the elements that pass the test.\n */\nconst $filter = isWorking ? patchedFilter : implementation;\n\nexport default $filter;\n","import toObject from 'to-object-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport attempt from 'attempt-x';\n\nconst nativeGOPS = {}.constructor.getOwnPropertySymbols;\nlet isWorking;\n\nif (hasSymbolSupport && nativeGOPS && typeof nativeGOPS === 'function') {\n  /* eslint-disable-next-line compat/compat */\n  const symbol = Symbol('');\n  const testObj = {a: 1};\n  testObj[symbol] = 2;\n  const r = attempt(nativeGOPS, testObj);\n  isWorking = r.threw === false && r.value && r.value.length === 1 && r.value[0] === symbol;\n}\n\n/**\n * This method creates an array of all symbol properties found directly upon a\n * given object.\n *\n * @param {object} obj - The object whose symbol properties are to be returned.\n * @throws {TypeError} If target is null or undefined.\n * @returns {Array} An array of all symbol properties found directly upon the\n *  given object.\n */\nconst getOwnPropertySymbols = function getOwnPropertySymbols(obj) {\n  const object = toObject(obj);\n\n  return isWorking ? nativeGOPS(object) : [];\n};\n\nexport default getOwnPropertySymbols;\n","import toObject from 'to-object-x';\nimport filter from 'array-filter-x';\nimport getOPS from 'get-own-property-symbols-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\n\n/**\n * This method returns only the enumerable own property symbols of an object.\n *\n * @param {object} target - The target.\n * @throws {TypeError} - If target is null or undefined.\n * @returns {Array} The enumerable own property symbols.\n */\nconst getOwnEnumerablePropertySymbols = function getOwnEnumerablePropertySymbols(target) {\n  const object = toObject(target);\n\n  return filter(getOPS(object), (symbol) => {\n    return propertyIsEnumerable(object, symbol);\n  });\n};\n\nexport default getOwnEnumerablePropertySymbols;\n","import toObject from 'to-object-x';\nimport isArguments from 'is-arguments';\nimport isArray from 'is-array-x';\nimport arrayLikeSlice from 'array-like-slice-x';\nimport attempt from 'attempt-x';\nimport isString from 'is-string';\n\nconst nativeSlice = [].slice;\n\nconst testArray = function testArray() {\n  const res = attempt.call([1, 2, 3], nativeSlice, 1, 2);\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 2;\n};\n\nconst testString = function testString() {\n  const res = attempt.call('abc', nativeSlice, 1, 2);\n\n  return res.threw || isArray(res.value) === false || res.value.length !== 1 || res.value[0] !== 'b';\n};\n\nconst testDOM = function testDOM() {\n  const doc = typeof document !== 'undefined' && document;\n  const resultDocElement = doc ? attempt.call(doc.documentElement, nativeSlice).threw : false;\n\n  return resultDocElement ? resultDocElement.threw : false;\n};\n\nconst failArray = testArray();\nconst failString = testString();\nconst failDOM = testDOM();\n\n/**\n * The slice() method returns a shallow copy of a portion of an array into a new\n * array object selected from begin to end (end not included). The original\n * array will not be modified.\n *\n * @param {Array|object} array - The array to slice.\n * @param {number} [start] - Zero-based index at which to begin extraction.\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(-2) extracts the last two elements in the sequence.\n *  If begin is undefined, slice begins from index 0.\n * @param {number} [end] - Zero-based index before which to end extraction.\n *  Slice extracts up to but not including end. For example, slice(1,4)\n *  extracts the second element through the fourth element (elements indexed\n *  1, 2, and 3).\n *  A negative index can be used, indicating an offset from the end of the\n *  sequence. Running slice(2,-1) extracts the third element through the second-to-last\n *  element in the sequence.\n *  If end is omitted, slice extracts through the end of the\n *  sequence (arr.length).\n *  If end is greater than the length of the sequence, slice extracts through\n *  the end of the sequence (arr.length).\n * @returns {Array} A new array containing the extracted elements.\n */\nconst slice = function slice(array, start, end) {\n  const object = toObject(array);\n\n  if (failArray || (failDOM && isArray(object) === false) || (failString && isString(object)) || isArguments(object)) {\n    return arrayLikeSlice(object, start, end);\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  return nativeSlice.apply(object, arrayLikeSlice(arguments, 1));\n};\n\nexport default slice;\n","import toObject from 'to-object-x';\nimport objectKeys from 'object-keys-x';\nimport getOEPS from 'get-own-enumerable-property-symbols-x';\n\nconst {concat} = [];\n\n/**\n * This method returns only the enumerable own keys of an object.\n *\n * @param {object} target - The target.\n * @throws {TypeError} - If target is null or undefined.\n * @returns {Array} The enumerable own keys.\n */\nconst getOwnNonEnumerableKeys = function getOwnNonEnumerableKeys(target) {\n  const object = toObject(target);\n\n  return concat.call(objectKeys(object), getOEPS(object));\n};\n\nexport default getOwnNonEnumerableKeys;\n","import forEach from 'array-for-each-x';\nimport $defineProperty from 'object-define-property-x';\nimport toObject from 'to-object-x';\nimport assertIsObject from 'assert-is-object-x';\nimport getKeys from 'get-own-enumerable-keys-x';\n\nexport const defineProperty = $defineProperty;\n\n/**\n * This method defines new or modifies existing properties directly on an\n * object, returning the object.\n *\n * @param {object} object - The object on which to define or modify properties.\n * @param {object} properties - An object whose own enumerable properties\n *  constitute descriptors for the\n * properties to be defined or modified.\n * @returns {object} The object that was passed to the function.\n */\nconst defineProperties = function defineProperties(object, properties) {\n  assertIsObject(object);\n  const props = toObject(properties);\n  forEach(getKeys(props), function defineProp(property) {\n    if (property !== '__proto__') {\n      $defineProperty(object, property, props[property]);\n    }\n  });\n\n  return object;\n};\n\nexport default defineProperties;\n","import attempt from 'attempt-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\nimport toLength from 'to-length-x';\nimport toObject from 'to-object-x';\nimport assertIsFunction from 'assert-is-function-x';\nimport toBoolean from 'to-boolean-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\n\nconst rr = [].reduceRight;\nconst nativeReduceR = typeof rr === 'function' && rr;\n\nconst test1 = function test1() {\n  return attempt.call([], nativeReduceR, function attemptee(acc) {\n    return acc;\n  }).threw;\n};\n\nconst test2 = function test2() {\n  const res = attempt.call(\n    toObject('abc'),\n    nativeReduceR,\n    function attemptee(acc, c) {\n      return acc + c;\n    },\n    'x',\n  );\n\n  return res.threw === false && res.value === 'xcba';\n};\n\nconst test3 = function test3() {\n  const res = attempt.call(\n    (function getArgs() {\n      /* eslint-disable-next-line prefer-rest-params */\n      return arguments;\n    })(1, 2, 3),\n    nativeReduceR,\n    function attemptee(acc, arg) {\n      return acc + arg;\n    },\n    1,\n  );\n\n  return res.threw === false && res.value === 7;\n};\n\nconst test4 = function test4() {\n  const res = attempt.call(\n    {0: 1, 1: 2, 3: 3, 4: 4, length: 4},\n    nativeReduceR,\n    function attemptee(acc, arg) {\n      return acc + arg;\n    },\n    2,\n  );\n\n  return res.threw === false && res.value === 8;\n};\n\nconst test5 = function test5() {\n  const doc = typeof document !== 'undefined' && document;\n\n  if (doc) {\n    const fragment = doc.createDocumentFragment();\n    const div = doc.createElement('div');\n    fragment.appendChild(div);\n\n    const attemptee = function attemptee(acc, node) {\n      acc[acc.length] = node;\n\n      return acc;\n    };\n\n    const res = attempt.call(fragment.childNodes, nativeReduceR, attemptee, []);\n\n    return res.threw === false && res.value.length === 1 && res.value[0] === div;\n  }\n\n  return true;\n};\n\nconst test6 = function test6() {\n  const res = attempt.call('ab', nativeReduceR, function attemptee() {\n    /* eslint-disable-next-line prefer-rest-params */\n    return arguments[3];\n  });\n\n  return res.threw === false && typeof res.value === 'object';\n};\n\n// ES5 15.4.4.22\n// http://es5.github.com/#x15.4.4.22\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight\nconst isWorking = toBoolean(nativeReduceR) && test1() && test2() && test3() && test4() && test5() && test6();\n\nconst patchedReduceRight = function reduceRight(array, callBack /* , initialValue */) {\n  requireObjectCoercible(array);\n  const args = [assertIsFunction(callBack)];\n\n  if (arguments.length > 2) {\n    /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n    args[1] = arguments[2];\n  }\n\n  return nativeReduceR.apply(array, args);\n};\n\nexport const implementation = function reduceRight(array, callBack /* , initialValue */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n  const iterable = splitIfBoxedBug(object);\n  const length = toLength(iterable.length);\n  const argsLength = arguments.length;\n\n  // no value to return if no initial value, empty array\n  if (length === 0 && argsLength < 3) {\n    throw new TypeError('Reduce of empty array with no initial value');\n  }\n\n  let result;\n  let i = length - 1;\n\n  if (argsLength > 2) {\n    /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n    result = arguments[2];\n  } else {\n    do {\n      if (i in iterable) {\n        result = iterable[i];\n        i -= 1;\n        break;\n      }\n\n      // if array contains no values, no initial value to return\n      i -= 1;\n\n      if (i < 0) {\n        throw new TypeError('Reduce of empty array with no initial value');\n      }\n    } while (true); /* eslint-disable-line no-constant-condition */\n  }\n\n  while (i >= 0) {\n    if (i in iterable) {\n      result = callBack(result, iterable[i], i, object);\n    }\n\n    i -= 1;\n  }\n\n  return result;\n};\n\n/**\n * This method applies a function against an accumulator and each value of the\n * array (from right-to-left) to reduce it to a single value..\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to execute for each element.\n * @param {*} [initialValue] - Value to use as the first argument to the first\n *  call of the callback. If no initial value is supplied, the first element in\n *  the array will be used. Calling reduceRight on an empty array without an initial\n *  value is an error.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @throws {TypeError} If called on an empty array without an initial value.\n * @returns {*} The value that results from the reduction.\n */\nconst $reduceRight = isWorking ? patchedReduceRight : implementation;\n\nexport default $reduceRight;\n","import defineProperties from 'object-define-properties-x';\nimport slice from 'array-slice-x';\nimport reduceRight from 'array-reduce-right-x';\nimport toBoolean from 'to-boolean-x';\n\nconst reducer = function _reducer(acc, digit) {\n  return acc + digit;\n};\n\n/**\n * Serialise the counter´s current value.\n *\n * @private\n * @this BigCounter\n * @returns {string} A string representation of an integer.\n */\nconst counterToString = function ToString() {\n  return reduceRight(this.count, reducer, '');\n};\n\n/**\n * Incremental integer counter. Counts from `0` to very big integers.\n * Javascript´s number type allows you to count in integer steps\n * from `0` to `9007199254740991`. As of ES5, Strings can contain\n * approximately 65000 characters and ES6 is supposed to handle\n * the `MAX_SAFE_INTEGER` (though I don´t believe any environments supports\n * this). This counter represents integer values as strings and can therefore\n * count in integer steps from `0` to the maximum string length (that´s some\n * 65000 digits). In the lower range, upto `9007199254740991`, the strings can\n * be converted to safe Javascript integers `Number(value)` or `+value`. This\n * counter is great for any applications that need a really big count\n * represented as a string, (an ID string).\n *\n * @class\n * @property {Array<number>} count - A representation of a big number.\n */\nconst BigCounter = function BigCounter() {\n  if (toBoolean(this) === false || !(this instanceof BigCounter)) {\n    throw new TypeError('Constructor BigCounter requires \"new\"');\n  }\n\n  defineProperties(this, {\n    count: {\n      value: [0],\n    },\n  });\n};\n\ndefineProperties(BigCounter.prototype, {\n  /**\n   * Gets the counter´s current value.\n   *\n   * @function\n   * @returns {string} A string representation of an integer.\n   */\n  get: {\n    value: counterToString,\n  },\n  /**\n   * Increments the counter´s value by `1`.\n   *\n   * @function\n   * @returns {object} The counter object.\n   */\n  next: {\n    value: function next() {\n      const clone = slice(this.count);\n      this.count.length = 0;\n      const {length} = clone;\n      const howMany = length > 0 ? length : 1;\n      let carry = 0;\n      let index = 0;\n      while (index < howMany || carry) {\n        const zi = carry + (clone[index] || 0) + (index === 0);\n        this.count[this.count.length] = zi % 10;\n        /* eslint-disable-next-line no-bitwise */\n        carry = (zi / 10) >> 0; // floor\n        index += 1;\n      }\n\n      return this;\n    },\n  },\n  /**\n   * Resets the counter back to `0`.\n   *\n   * @function\n   * @returns {object} The counter object.\n   */\n  reset: {\n    value: function reset() {\n      this.count.length = 1;\n      this.count[0] = 0;\n\n      return this;\n    },\n  },\n  /**\n   * Gets the counter´s current value.\n   *\n   * @function\n   * @returns {string} A string representation of an integer.\n   */\n  toJSON: {\n    value: counterToString,\n  },\n  /**\n   * Gets the counter´s current value.\n   *\n   * @function\n   * @returns {string} A string representation of an integer.\n   */\n  toString: {\n    value: counterToString,\n  },\n  /**\n   * Gets the counter´s current value.\n   *\n   * @function\n   * @returns {string} A string representation of an integer.\n   */\n  valueOf: {\n    value: counterToString,\n  },\n});\n\nexport default BigCounter;\n"],"sourceRoot":""}